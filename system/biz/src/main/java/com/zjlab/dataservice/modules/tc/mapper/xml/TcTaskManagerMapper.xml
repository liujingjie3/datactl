<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjlab.dataservice.modules.tc.mapper.TcTaskManagerMapper">

    <sql id="selectFields">
        t.id AS taskId,
        t.task_name AS taskName,
        t.task_code AS taskCode,
        t.template_id AS templateId,
        tt.template_name AS templateName,
        t.satellites AS satellites,
        t.create_time AS createTime,
        t.status AS status
    </sql>

    <sql id="whereCommon">
        t.del_flag = 0
        <if test="query.q != null and query.q != ''">
            AND (t.task_name LIKE CONCAT('%', #{query.q}, '%') OR t.task_code LIKE CONCAT('%', #{query.q}, '%'))
        </if>
        <if test="query.status != null">
            AND t.status = #{query.status}
        </if>
        <if test="query.templateId != null">
            AND t.template_id = #{query.templateId}
        </if>
        <if test="query.startTimeFrom != null">
            AND t.create_time &gt;= #{query.startTimeFrom}
        </if>
    </sql>

    <insert id="insertTask">
        INSERT INTO tc_task(
            task_code, task_name, task_requirement, template_id,
            need_imaging, imaging_area, result_display_needed,
            satellites, remote_cmds, orbit_plans, status,
            create_by, create_time, update_by, update_time
        ) VALUES (
            #{taskCode}, #{dto.taskName}, #{dto.taskRequirement}, #{dto.templateId},
            #{dto.needImaging}, #{dto.imagingArea}, #{dto.resultDisplayNeeded},
            #{dto.satellitesJson}, #{dto.remoteCmdsJson}, #{dto.orbitPlansJson}, 0,
            #{userId}, NOW(), #{userId}, NOW()
        )
    </insert>

    <select id="selectTemplateAttr" resultType="string">
        SELECT template_attr FROM tc_todo_template
        WHERE template_id = #{templateId} AND del_flag = 0
    </select>

    <resultMap id="TaskManagerListItemResultMap" type="com.zjlab.dataservice.modules.tc.model.vo.TaskManagerListItemVO">
        <id column="taskId" property="taskId"/>
        <result column="taskName" property="taskName"/>
        <result column="taskCode" property="taskCode"/>
        <result column="templateId" property="templateId"/>
        <result column="templateName" property="templateName"/>
        <result column="satellites" property="satellitesJson"/>
        <result column="createTime" property="createTime"/>
        <result column="status" property="status"/>
    </resultMap>

    <select id="selectTaskList" resultMap="TaskManagerListItemResultMap">
        SELECT
        <include refid="selectFields"/>
        FROM (
            SELECT t.*
            FROM tc_task t
            <if test="query.tab == 'todo' or query.tab == 'handled'">
                JOIN tc_task_work_item wi ON wi.task_id = t.id
            </if>
            WHERE
            <include refid="whereCommon"/>
            <if test="query.tab == 'startedByMe'">
                AND t.create_by = #{query.userId}
            </if>
            <if test="query.tab == 'todo'">
                AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId} AND wi.phase_status IN (0,1)
            </if>
            <if test="query.tab == 'handled'">
                AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId}
                AND wi.phase_status IN (2,4,5)
            </if>
            ORDER BY t.create_time DESC
            LIMIT #{query.offset}, #{query.pageSize}
        ) t
        LEFT JOIN tc_todo_template tt ON tt.template_id = t.template_id
    </select>

    <select id="countTaskList" resultType="long">
        SELECT
        <choose>
            <when test="query.tab == 'todo' or query.tab == 'handled'">
                COUNT(DISTINCT t.id)
            </when>
            <otherwise>
                COUNT(1)
            </otherwise>
        </choose>
        FROM tc_task t
        <if test="query.tab == 'todo' or query.tab == 'handled'">
            JOIN tc_task_work_item wi ON wi.task_id = t.id
        </if>
        WHERE
        <include refid="whereCommon"/>
        <if test="query.tab == 'startedByMe'">
            AND t.create_by = #{query.userId}
        </if>
        <if test="query.tab == 'todo'">
            AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId} AND wi.phase_status IN (0,1)
        </if>
        <if test="query.tab == 'handled'">
            AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId}
            AND wi.phase_status IN (2,4,5)
        </if>
    </select>

    <resultMap id="TaskDetailResultMap" type="com.zjlab.dataservice.modules.tc.model.vo.TaskDetailVO">
        <id column="taskId" property="taskId"/>
        <result column="taskName" property="taskName"/>
        <result column="taskType" property="taskType"/>
        <result column="satellites" property="satellitesJson"/>
        <result column="createTime" property="createTime"/>
        <result column="status" property="status"/>
        <result column="taskRequirement" property="taskRequirement"/>
    </resultMap>

    <select id="selectTaskDetail" resultMap="TaskDetailResultMap">
        SELECT t.id AS taskId,
               t.task_name AS taskName,
               t.task_type AS taskType,
               t.satellites AS satellites,
               t.create_time AS createTime,
               t.status AS status,
               t.task_requirement AS taskRequirement
        FROM tc_task t
        WHERE t.id = #{taskId} AND t.del_flag = 0
    </select>

    <select id="selectTaskStatus" resultType="int">
        SELECT status FROM tc_task WHERE id = #{taskId} AND del_flag = 0 FOR UPDATE
    </select>

    <update id="updateTaskCancel">
        UPDATE tc_task
        SET status = 3,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <select id="selectTaskForEdit" resultType="com.zjlab.dataservice.modules.tc.model.dto.TaskManagerEditInfo">
        SELECT status, create_by AS createBy, template_id AS templateId, result_display_needed AS resultDisplayNeeded
        FROM tc_task
        WHERE id = #{taskId} AND del_flag = 0 FOR UPDATE
    </select>

    <update id="updateTask">
        UPDATE tc_task
        SET task_name = #{dto.taskName},
            task_requirement = #{dto.taskRequirement},
            result_display_needed = #{dto.resultDisplayNeeded},
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{dto.taskId} AND del_flag = 0
    </update>

    <select id="selectLastInsertId" resultType="long">
        SELECT LAST_INSERT_ID()
    </select>

    <select id="selectUserIdsByRoleIds" resultType="string">
        SELECT DISTINCT ur.user_id
        FROM sys_user_role ur
        WHERE ur.role_id IN
        <foreach collection="roleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateTaskComplete">
        UPDATE tc_task
        SET status = 1,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <update id="updateTaskAbort">
        UPDATE tc_task
        SET status = 2,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <select id="selectRemoteCmds" resultType="string">
        SELECT remote_cmds FROM tc_task WHERE id = #{taskId} AND del_flag = 0
    </select>

    <select id="selectOrbitPlans" resultType="string">
        SELECT orbit_plans FROM tc_task WHERE id = #{taskId} AND del_flag = 0
    </select>

    <select id="countTaskByStatus" resultType="com.zjlab.dataservice.modules.tc.model.dto.TaskStatusCountDto">
        SELECT status, COUNT(1) AS count
        FROM tc_task
        WHERE del_flag = 0
        GROUP BY status
    </select>

</mapper>
