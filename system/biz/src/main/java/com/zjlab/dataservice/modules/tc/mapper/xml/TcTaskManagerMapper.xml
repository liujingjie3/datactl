<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjlab.dataservice.modules.tc.mapper.TcTaskManagerMapper">

    <sql id="selectFields">
        t.id AS taskId,
        t.task_name AS taskName,
        t.task_code AS taskCode,
        t.template_id AS templateId,
        tt.template_name AS templateName,
        t.satellites AS satellites,
        t.create_time AS createTime,
        t.status AS status
    </sql>

    <sql id="whereCommon">
        t.del_flag = 0
        <if test="query.q != null and query.q != ''">
            AND (t.task_name LIKE CONCAT('%', #{query.q}, '%') OR t.task_code LIKE CONCAT('%', #{query.q}, '%'))
        </if>
        <if test="query.status != null">
            AND t.status = #{query.status}
        </if>
        <if test="query.templateId != null">
            AND t.template_id = #{query.templateId}
        </if>
        <if test="query.startTimeFrom != null">
            AND t.create_time &gt;= #{query.startTimeFrom}
        </if>
    </sql>

    <insert id="insertTask">
        INSERT INTO tc_task(
            task_code, task_name, task_requirement, template_id,
            need_imaging, imaging_area, result_display_needed,
            satellites, remote_cmds, orbit_plans, status,
            create_by, create_time, update_by, update_time
        ) VALUES (
            #{taskCode}, #{dto.taskName}, #{dto.taskRequirement}, #{dto.templateId},
            #{dto.needImaging}, #{dto.imagingArea}, #{dto.resultDisplayNeeded},
            #{dto.satellites}, #{dto.remoteCmds}, #{dto.orbitPlans}, 0,
            #{userId}, NOW(), #{userId}, NOW()
        )
    </insert>

    <select id="selectTemplateAttr" resultType="string">
        SELECT template_attr FROM tc_todo_template
        WHERE template_id = #{templateId} AND del_flag = 0
    </select>

    <insert id="insertNodeInst">
        INSERT INTO tc_task_node_inst(
            task_id, template_id, node_id, prev_node_ids, next_node_ids,
            arrived_count, handler_role_ids, order_no, status, max_duration,
            create_by, create_time, update_by, update_time
        ) VALUES (
            #{taskId}, #{templateId}, #{nodeId}, '[]', '[]',
            0, #{handlerRoleIds}, #{orderNo}, 0, #{maxDuration},
            #{userId}, NOW(), #{userId}, NOW()
        )
    </insert>

    <update id="updateNodeInstPrevNext">
        UPDATE tc_task_node_inst
        SET prev_node_ids = #{prevNodeIds},
            next_node_ids = #{nextNodeIds},
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{nodeInstId} AND del_flag = 0
    </update>

    <update id="activateNodeInst">
        UPDATE tc_task_node_inst
        SET status = 1,
            started_at = NOW(),
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{nodeInstId} AND status = 0 AND del_flag = 0
          AND arrived_count &gt;= JSON_LENGTH(prev_node_ids)
    </update>
    <update id="completeNodeInst">
        UPDATE tc_task_node_inst
        SET status = 2,
            completed_at = NOW(),
            completed_by = #{userId},
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{nodeInstId} AND status = 1 AND del_flag = 0
    </update>


    <select id="selectTaskList" resultType="com.zjlab.dataservice.modules.tc.model.vo.TaskManagerListItemVO">
        SELECT
        <include refid="selectFields"/>
        FROM (
            SELECT t.*
            FROM tc_task t
            <if test="query.tab == 'todo' or query.tab == 'handled'">
                JOIN tc_task_work_item wi ON wi.task_id = t.id
            </if>
            WHERE
            <include refid="whereCommon"/>
            <if test="query.tab == 'startedByMe'">
                AND t.create_by = #{query.userId}
            </if>
            <if test="query.tab == 'todo'">
                AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId} AND wi.phase_status IN (0,1)
            </if>
            <if test="query.tab == 'handled'">
                AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId}
                AND wi.phase_status IN (2,4,5)
            </if>
            ORDER BY t.create_time DESC
            LIMIT #{query.offset}, #{query.pageSize}
        ) t
        LEFT JOIN tc_todo_template tt ON tt.template_id = t.template_id
    </select>

    <select id="countTaskList" resultType="long">
        SELECT
        <choose>
            <when test="query.tab == 'todo' or query.tab == 'handled'">
                COUNT(DISTINCT t.id)
            </when>
            <otherwise>
                COUNT(1)
            </otherwise>
        </choose>
        FROM tc_task t
        <if test="query.tab == 'todo' or query.tab == 'handled'">
            JOIN tc_task_work_item wi ON wi.task_id = t.id
        </if>
        WHERE
        <include refid="whereCommon"/>
        <if test="query.tab == 'startedByMe'">
            AND t.create_by = #{query.userId}
        </if>
        <if test="query.tab == 'todo'">
            AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId} AND wi.phase_status IN (0,1)
        </if>
        <if test="query.tab == 'handled'">
            AND wi.del_flag = 0 AND wi.assignee_id = #{query.userId}
            AND wi.phase_status IN (2,4,5)
        </if>
    </select>

    <select id="selectCurrentNodes" resultType="com.zjlab.dataservice.modules.tc.model.dto.CurrentNodeRow">
        SELECT
            ni.task_id AS taskId,
            ni.id AS nodeInstId,
            ninfo.name AS nodeName,
            ni.handler_role_ids AS handlerRoleIds
        FROM tc_task_node_inst ni
        JOIN tc_node_info ninfo ON ninfo.id = ni.node_id
        WHERE ni.del_flag = 0 AND ni.status = 1
          AND ni.task_id IN
            <foreach collection="taskIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        ORDER BY ni.task_id, ni.order_no, ni.id
    </select>

    <select id="selectTaskStatus" resultType="int">
        SELECT status FROM tc_task WHERE id = #{taskId} AND del_flag = 0 FOR UPDATE
    </select>

    <select id="countDoneNodeInst" resultType="long">
        SELECT COUNT(*) FROM tc_task_node_inst
        WHERE task_id = #{taskId} AND del_flag = 0 AND status = 2 FOR UPDATE
    </select>

    <update id="updateTaskCancel">
        UPDATE tc_task
        SET status = 3,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <update id="updateNodeInstCancel">
        UPDATE tc_task_node_inst
        SET status = 3,
            update_by = #{userId},
            update_time = NOW()
        WHERE task_id = #{taskId} AND del_flag = 0 AND status IN (0,1)
    </update>

    <select id="selectTaskForEdit" resultType="com.zjlab.dataservice.modules.tc.model.dto.TaskManagerEditInfo">
        SELECT status, create_by AS createBy, template_id AS templateId, result_display_needed AS resultDisplayNeeded
        FROM tc_task
        WHERE id = #{taskId} AND del_flag = 0 FOR UPDATE
    </select>

    <update id="updateTask">
        UPDATE tc_task
        SET task_name = #{dto.taskName},
            task_requirement = #{dto.taskRequirement},
            need_imaging = #{dto.needImaging},
            imaging_area = #{dto.imagingArea},
            result_display_needed = #{dto.resultDisplayNeeded},
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{dto.taskId} AND del_flag = 0
    </update>

    <select id="selectEndNodeInstIds" resultType="long">
        SELECT id FROM tc_task_node_inst
        WHERE task_id = #{taskId} AND del_flag = 0 AND JSON_LENGTH(next_node_ids) = 0
    </select>

    <insert id="insertViewNodeInst">
        INSERT INTO tc_task_node_inst(
            task_id, template_id, node_id, prev_node_ids, next_node_ids,
            arrived_count, handler_role_ids, order_no, status, max_duration,
            create_by, create_time, update_by, update_time
        ) VALUES (
            #{taskId}, #{templateId}, #{nodeId}, #{prevNodeIds}, '[]',
            0, #{handlerRoleIds}, NULL, 0, NULL,
            #{userId}, NOW(), #{userId}, NOW()
        )
    </insert>

    <select id="selectLastInsertId" resultType="long">
        SELECT LAST_INSERT_ID()
    </select>

    <update id="appendViewNodeToEndNodes">
        UPDATE tc_task_node_inst
        SET next_node_ids = JSON_ARRAY_APPEND(next_node_ids, '$', #{nodeInstId}),
            update_by = #{userId},
            update_time = NOW()
        WHERE id IN
        <foreach collection="endInstIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectViewNodeInstId" resultType="long">
        SELECT id FROM tc_task_node_inst
        WHERE task_id = #{taskId} AND node_id = #{nodeId} AND del_flag = 0
    </select>

    <update id="deleteNodeInst">
        UPDATE tc_task_node_inst
        SET del_flag = 1,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{nodeInstId} AND del_flag = 0
    </update>

    <update id="clearEndNodeNext">
        UPDATE tc_task_node_inst
        SET next_node_ids = '[]',
            update_by = #{userId},
            update_time = NOW()
        WHERE task_id = #{taskId} AND del_flag = 0
          AND JSON_CONTAINS(next_node_ids, CAST(#{nodeInstId} AS JSON), '$')
    </update>

    <select id="selectUserIdsByRoleIds" resultType="string">
        SELECT DISTINCT ur.user_id
        FROM sys_user_role ur
        WHERE ur.role_id IN
        <foreach collection="roleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectNextNodeIds" resultType="string">
        SELECT next_node_ids FROM tc_task_node_inst
        WHERE id = #{nodeInstId} AND del_flag = 0
    </select>

    <update id="increaseArrivedCount">
        UPDATE tc_task_node_inst
        SET arrived_count = arrived_count + 1,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{nodeInstId} AND del_flag = 0
    </update>

    <select id="selectHandlerRoleIds" resultType="string">
        SELECT handler_role_ids FROM tc_task_node_inst
        WHERE id = #{nodeInstId} AND del_flag = 0
    </select>

    <select id="countOngoingNodeInst" resultType="long">
        SELECT COUNT(*) FROM tc_task_node_inst
        WHERE task_id = #{taskId} AND del_flag = 0 AND status IN (0,1)
    </select>

    <update id="updateTaskComplete">
        UPDATE tc_task
        SET status = 1,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <update id="updateTaskAbort">
        UPDATE tc_task
        SET status = 2,
            update_by = #{userId},
            update_time = NOW()
        WHERE id = #{taskId} AND del_flag = 0
    </update>

    <update id="updateNodeInstAbort">
        UPDATE tc_task_node_inst
        SET status = 4,
            update_by = #{userId},
            update_time = NOW()
        WHERE task_id = #{taskId} AND del_flag = 0 AND status IN (0,1)
    </update>

    <select id="selectNodeInstStatus" resultType="int">
        SELECT status FROM tc_task_node_inst
        WHERE id = #{nodeInstId} AND del_flag = 0
    </select>

    <select id="selectTemplateNodeFlows" resultType="com.zjlab.dataservice.modules.tc.model.vo.TemplateNodeFlowVO">
        SELECT
            ni.name AS nodeName,
            ni.description AS nodeDescription,
            GROUP_CONCAT(DISTINCT su.realname ORDER BY su.realname) AS handlerRealName,
            ttn.max_duration AS maxDuration
        FROM tc_task_template_node ttn
        JOIN tc_node_info ni ON ni.id = ttn.node_id
        LEFT JOIN tc_node_role_rel nrr ON nrr.node_id = ttn.node_id AND nrr.del_flag = 0
        LEFT JOIN sys_user_role sur ON sur.role_id = nrr.role_id
        LEFT JOIN sys_user su ON su.id = sur.user_id
        WHERE ttn.del_flag = 0 AND ttn.template_id = #{templateId}
        GROUP BY ttn.id, ni.name, ni.description, ttn.max_duration, ttn.order_no
        ORDER BY ttn.order_no
    </select>

</mapper>
